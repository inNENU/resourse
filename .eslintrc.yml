root: true

env:
  es6: true

extends:
  - eslint:recommended
  - plugin:prettier/recommended

plugins:
  - import

ignorePatterns:
  - other/

rules:
  curly:
    - error
    - multi
    - consistent

  import/consistent-type-specifier-style:
    - error
    - prefer-inline

  import/dynamic-import-chunkname:
    - error

  import/first:
    - error

  import/newline-after-import:
    - error

  import/no-commonjs:
    - error

  import/no-cycle:
    - error

  import/no-duplicates:
    - error
    - considerQueryString: true
      prefer-inline: true

  import/no-named-default:
    - error

  import/order:
    - error
    - alphabetize:
        order: asc
        orderImportKind: asc
      groups:
        - builtin
        - external
        - internal
        - - parent
          - sibling
        - index
        - object
      newlines-between: always

  no-duplicate-imports:
    - error

  no-unmodified-loop-condition:
    - error

  padding-line-between-statements:
    - error
    - blankLine: always
      prev:
        - const
        - let
      next:
        - "*"
    - blankLine: any
      prev:
        - const
        - let
      next:
        - const
        - let
    - blankLine: always
      prev:
        - "*"
      next:
        - return

  sort-imports:
    - error
    - allowSeparatedGroups: false
      ignoreDeclarationSort: true

overrides:
  - files:
      - "*.ts"

    extends:
      - plugin:@typescript-eslint/eslint-recommended
      - plugin:@typescript-eslint/recommended
      - "plugin:@typescript-eslint/recommended-requiring-type-checking"
      - plugin:prettier/recommended

    plugins:
      - "@typescript-eslint"

    parserOptions:
      parser: "@typescript-eslint/parser"
      project:
        - "./tsconfig.json"

    rules:
      "@typescript-eslint/ban-ts-comment":
        - off

      "@typescript-eslint/explicit-function-return-type":
        - warn
        - allowTypedFunctionExpressions: true

      "@typescript-eslint/naming-convention":
        - warn

        - selector: default
          format:
            - camelCase

        - selector: import
          format:
            - camelCase
            - PascalCase

        - selector: property
          format:
            - camelCase
            - PascalCase
            - UPPER_CASE

        - selector: variable
          format:
            - camelCase
            - UPPER_CASE
          leadingUnderscore: allowSingleOrDouble

        - selector: parameter
          format:
            - camelCase
            - PascalCase
          leadingUnderscore: allow

        - selector: typeLike
          format:
            - PascalCase

        - selector: enumMember
          format:
            - PascalCase

      "@typescript-eslint/no-explicit-any":
        - warn
        - ignoreRestArgs: true

      "@typescript-eslint/no-floating-promises":
        - off

      "@typescript-eslint/no-non-null-assertion":
        - off

      "@typescript-eslint/no-unsafe-member-access":
        - warn

      "@typescript-eslint/unbound-method":
        - off

  - files:
      - "**/test/**/*.spec.js"
      - "**/test/**/*.spec.ts"

    env:
      jest: true
      node: true
